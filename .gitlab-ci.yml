
# Using the node alpine image to build the React app
image: node:alpine

variables:
  AWS_DEFAULT_REGION: eu-central-1 # The region of our S3 bucket
  BUCKET_NAME: thedjhub.io         # Your bucket name


  PUBLIC_URL: /thedjhub
# Cache node modules - speeds up future builds
cache:
  paths:
    - node_modules
    - vendor

# Name the stages involved in the pipeline
stages:
  - test
  - build
  - deploy

test:
  stage: test
  script:
    - npm install cypress -g
    - npm install wait-on -g
    - npm start & wait-on http://localhost:3000
    - cypress run

build:
  stage: build
  dependencies:
    - test
  script:
  - cd front-thedjhub
  - npm install # Install all dependencies
  - npm run build --prod # Build for prod
  - cp public/index.html public/404.html # Not necessary, but helps with https://medium.com/@pshrmn/demystifying-single-page-applications-3068d0555d46

deploys3:
  image: "python:latest"  # We use python because there is a well-working AWS Sdk
  stage: deploy
  dependencies:
    - build      # We want to specify dependencies in an explicit way, to avoid confusion if there are different build jobs
  before_script:
    - pip install awscli # Install the SDK
  script:
    - aws s3 cp front-thedjhub/build s3://${BUCKET_NAME}/${CI_COMMIT_REF_SLUG} --recursive # Replace example-bucket with your bucket
  environment:
    name: ${CI_COMMIT_REF_SLUG}
    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}  # This is the url of the bucket we saved before
    on_stop: clean_s3 # When the branch is merged, we clean up after ourself

clean_s3:
  image: "python:latest"
  stage: deploy
  before_script:
    - pip install awscli
  script:
    - aws s3 rm s3://${BUCKET_NAME}/${CI_COMMIT_REF_SLUG} --recursive # Replace example-bucket with your bucket
  environment:
    name: ${CI_COMMIT_REF_SLUG}
    action: stop
  when: manual
