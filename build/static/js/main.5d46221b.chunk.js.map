{"version":3,"sources":["components/Navbar.js","pages/Home/Home.js","pages/venues/Venues.js","pages/artists/Artists.js","App.js","serviceWorker.js","index.js","img/dj.jpg"],"names":["HeadNavbar","react_default","a","createElement","Navbar_default","bg","expand","Brand","react_router_dom","to","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","NavDropdown_default","title","Item","Divider","Form_default","inline","FormControl","type","placeholder","Button","variant","Component","Home","components_Navbar","Button_default","Venues","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","number_of_bars","bars","_this2","firebase","ref","child","on","snap","val","newState","bar","push","name","description","image","setState","map","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","component","color","CardActions","size","Artists","number_of_artists","artists","artist","price","genre","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5d46221b.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport Button from \"@material-ui/core/Button\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport FormControl from \"react-bootstrap/es/FormControl\";\nimport {Link} from \"react-router-dom\";\n\n\n\nclass HeadNavbar extends Component{\n\n\n    render() {\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand><Link to=\"\">Buzzlink</Link></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link><Link to=\"/venues\" className=\"link\">Venues</Link></Nav.Link>\n                        <Nav.Link><Link to=\"/artists\" className=\"link\">Artists</Link></Nav.Link>\n                        <NavDropdown title=\"About Us\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item to=\"\">Buzzing feeds</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item to=\"\">Team</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav className=\"mr-sm-1\">\n                        <Nav.Link><Link to=\"\" className=\"link\">Login</Link></Nav.Link>\n                        <Nav.Link><Link to=\"\" className=\"link\">Sign Up</Link></Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n\n\n        );\n    }\n}\n\nexport default HeadNavbar;\n\n","import HeadNavbar from \"../../components/Navbar\";\nimport React,{Component} from \"react\";\n\nimport \"./Home.css\";\nimport Button from \"react-bootstrap/Button\";\nimport {Link} from \"react-router-dom\";\n\nclass Home extends Component{\n\n    render() {\n\n        return (\n\n            <div className=\"Home\">\n                <HeadNavbar/>\n\n                <header className=\"App-header\">\n                    <h1>BuzzLink - Book an artist</h1>\n                    <div className=\"buttons\">\n                    <Button className =\"button\" variant=\"info\"><Link to=\"/artists\">BOOK AN ARTIST</Link></Button>\n                    <Button className =\"button\" variant=\"info\"><Link to=\"/venues\">BOOK A VENUE</Link></Button>\n                    </div>\n                </header>\n\n            </div>\n        );\n    }\n}\n\n\nexport default Home;\n","import React,{Component} from \"react\";\nimport HeadNavbar from \"../../components/Navbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport dj from \"../../img/dj.jpg\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport \"./Venues.css\";\n\nclass Venues extends Component {\n\n    constructor(  ) {\n        super();\n        this.state= {\n            number_of_bars: 10,\n            bars: [],\n        };\n    }\n\n    componentDidMount() {\n        let rootRef = firebase.database().ref();\n        let barsRef= rootRef.child('bars');\n\n        barsRef.on('value',snap =>{\n            let bars =snap.val();\n            let newState = [];\n            for (let bar in bars) {\n                newState.push({\n                    name: bars[bar].name,\n                    description: bars[bar].description,\n                    image: bars[bar].image,\n                });\n            }\n            this.setState({\n                bars: newState\n            });\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"Venues\">\n                <HeadNavbar></HeadNavbar>\n                <div className=\"Cards\">\n                    {this.state.bars.map(( bar ) => (\n                        <Card className=\"card\">\n                            <CardActionArea>\n                                <CardMedia\n                                    className=\"media\"\n                                    image={bar.image}\n                                    title={bar.name}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {bar.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {bar.description}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\">\n                                    Book\n                                </Button>\n                                <Button size=\"small\" color=\"primary\">\n                                    Learn More\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Venues;\n","import React,{Component} from \"react\";\nimport HeadNavbar from \"../../components/Navbar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport dj from \"../../img/dj.jpg\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport \"./Artists.css\";\n\nclass Artists extends Component {\n\n    constructor(  ) {\n        super();\n        this.state= {\n            number_of_artists: 10,\n            artists: [],\n        };\n    }\n\n    componentDidMount() {\n        let rootRef = firebase.database().ref();\n        let artistsRef= rootRef.child('artists');\n\n        artistsRef.on('value',snap =>{\n            let artists =snap.val();\n            let newState = [];\n            for (let artist in artists) {\n                newState.push({\n                    name: artists[artist].name,\n                    description: artists[artist].description,\n                    price: artists[artist].price,\n                    image: artists[artist].image,\n                });\n            }\n            this.setState({\n                artists: newState\n            });\n        })\n    };\n\n    render() {\n\n        return (\n            <div className=\"Venues\">\n                <HeadNavbar></HeadNavbar>\n                <div className=\"Cards\">\n                    {this.state.artists.map(( artist ) => (\n                        <Card className=\"card\">\n                            <CardActionArea>\n                                <CardMedia\n                                    className=\"media\"\n                                    image={artist.image}\n                                    title={artist.name}\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                        {artist.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {artist.genre}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {artist.price} /hour\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\">\n                                    Book\n                                </Button>\n                                <Button size=\"small\" color=\"primary\">\n                                    Learn More\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Artists;\n","import React, {Component} from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport Venues from \"./pages/venues/Venues\";\n\nimport \"./App.css\";\nimport Artists from \"./pages/artists/Artists\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAPThA_o-fCWAFWbTKmxAgxLwIOUrV3XDg\",\n    authDomain: \"ranky-b627b.firebaseapp.com\",\n    databaseURL: \"https://ranky-b627b.firebaseio.com\",\n    projectId: \"ranky-b627b\",\n    storageBucket: \"ranky-b627b.appspot.com\",\n    messagingSenderId: \"102594017401\",\n    appId: \"1:102594017401:web:a1c2eff7534c90b9\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\n\nclass App extends Component{\n\n    render() {\n\n        return (\n            <Router>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/venues\" component={Venues} />\n                <Route path=\"/artists\" component={Artists} />\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dj.049b1bd9.jpg\";"],"sourceRoot":""}